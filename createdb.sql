DROP TABLE TB_STATUS IF EXISTS CASCADE
DROP TABLE TB_EMPLOYEE IF EXISTS CASCADE
DROP TABLE TB_CATEGORY IF EXISTS CASCADE
DROP TABLE TB_CREDIT_CARD IF EXISTS CASCADE
DROP TABLE TB_ADDRESS IF EXISTS CASCADE 
DROP TABLE TB_CUSTOMER IF EXISTS CASCADE
DROP TABLE TB_ORDER IF EXISTS CASCADE 
DROP TABLE TB_PRODUCT IF EXISTS CASCADE
DROP TABLE TB_ORDER_ITEM IF EXISTS CASCADE

CREATE USER SAS PASSWORD SAS ADMIN;

CREATE TABLE TB_STATUS (
    StatusID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    StatusState VARCHAR(20) NOT NULL
);

CREATE TABLE TB_EMPLOYEE (
    EmpID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    EmpAssID VARCHAR(20) NOT NULL,
    EmpPass VARCHAR(20) NOT NULL,
    EmpFirst VARCHAR(20) NOT NULL,
    EmpLast VARCHAR(20) NOT NULL,
    EmpEmail VARCHAR(35) NOT NULL,
    EmpPhone INTEGER
);

CREATE TABLE TB_CATEGORY (
    CatID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    CatName VARCHAR(20) NOT NULL
);

CREATE TABLE TB_CREDIT_CARD (
    CreditID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    CardNumber INTEGER NOT NULL,
    CardExpire INTEGER NOT NULL,
);

CREATE TABLE TB_ADDRESS (
    AddID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    AddLine1 VARCHAR(200) NOT NULL,
    AddState VARCHAR(2) NOT NULL,
    AddZip INTEGER NOT NULL
);

CREATE TABLE TB_CUSTOMER (
    CusID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    CusShipAdd INTEGER NOT NULL,
    CusBillAdd INTEGER NOT NULL,
    CreditID INTEGER NOT NULL,
    CusAssID VARCHAR(20) NOT NULL,
    CusPass VARCHAR(20) NOT NULL,
    CusFirst VARCHAR(20) NOT NULL,
    CusLast VARCHAR(20) NOT NULL,
    CusEmail VARCHAR(35) NOT NULL,
    CusPhone INTEGER,

    FOREIGN KEY (CusShipAdd) REFERENCES TB_ADDRESS(AddID),
    FOREIGN KEY (CusBillAdd) REFERENCES TB_ADDRESS(AddID),
    FOREIGN KEY (CreditID) REFERENCES TB_CREDIT_CARD(CreditID)
);

CREATE TABLE TB_ORDER (
    OrderID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    CusID INTEGER NOT NULL,
    OrderStatus INTEGER NOT NULL,
    OrderDate INTEGER NOT NULL,

    FOREIGN KEY (CusID) REFERENCES TB_CUSTOMER(CusID),
    FOREIGN KEY (OrderStatus) REFERENCES TB_STATUS(StatusID)
);

CREATE TABLE TB_PRODUCT (
    ProID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    CatID INTEGER NOT NULL,
    LastUpdate INTEGER, 
    ProStatus INTEGER NOT NULL,
    ProName VARCHAR(60) NOT NULL,
    ProInfo VARCHAR(400),
    Price DOUBLE NOT NULL,

    FOREIGN KEY (CatID) REFERENCES TB_CATEGORY(CatID),
    FOREIGN KEY (LastUpdate) REFERENCES TB_EMPLOYEE(EmpID),
    FOREIGN KEY (ProStatus) REFERENCES TB_STATUS(StatusID)
);

CREATE TABLE TB_ORDER_ITEM (
    OrderItemID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    OrderID INTEGER NOT NULL,
    ProID INTEGER NOT NULL,
    Price DOUBLE NOT NULL,
    Qty INTEGER NOT NULL,

    FOREIGN KEY (OrderID) REFERENCES TB_ORDER(OrderID),
    FOREIGN KEY (ProID) REFERENCES TB_PRODUCT(ProID)
);

INSERT INTO TB_STATUS (StatusState) VALUES ('Out of stock');
INSERT INTO TB_STATUS (StatusState) VALUES ('Available');
INSERT INTO TB_STATUS (StatusState) VALUES ('Unavailable');
INSERT INTO TB_STATUS (StatusState) VALUES ('In process');
INSERT INTO TB_STATUS (StatusState) VALUES ('shipped');

INSERT INTO TB_CATEGORY (CatName) VALUES ('Bath care');
INSERT INTO TB_CATEGORY (CatName) VALUES ('Body care');
INSERT INTO TB_CATEGORY (CatName) VALUES ('Face care');
INSERT INTO TB_CATEGORY (CatName) VALUES ('Eye & Lip care');
INSERT INTO TB_CATEGORY (CatName) VALUES ('Hand care');

INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (3, 2, 'Face Soap', 13);
INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (3, 1, 'Liquid Facial Soap', 17);
INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (3, 3, 'Acne Solutions Cleansing Foam', 20);
INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (4, 2, 'All About Eyes Rich', 31);
INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (4, 2, 'Superbalm Lip Treatment', 15);
INSERT INTO TB_PRODUCT (CatID, ProStatus, ProName, Price) 
    VALUES (1, 3, 'Happy Body Wash', 33);

INSERT INTO "PUBLIC"."PUBLIC".TB_CREDIT_CARD (CARDNUMBER, CARDEXPIRE) 
	VALUES (1234567890, 111119);

INSERT INTO "PUBLIC"."PUBLIC".TB_ADDRESS (ADDLINE1, ADDSTATE, ADDZIP) 
	VALUES ('1044 W Dakin St. Chicago', 'IL', 60613);

INSERT INTO "PUBLIC"."PUBLIC".TB_CUSTOMER (CUSSHIPADD, CUSBILLADD, CREDITID, CUSASSID, CUSPASS, CUSFIRST, CUSLAST, CUSEMAIL, CUSPHONE) 
	VALUES (1, 1, 1, 'test', 'test', 'A', 'B', 'ab@gg.com', 12345678);